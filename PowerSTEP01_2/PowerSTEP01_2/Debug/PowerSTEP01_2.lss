
PowerSTEP01_2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000c2a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000bb6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000010  00800100  00800100  00000c2a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000c2a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000c5c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000240  00000000  00000000  00000c9c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000027da  00000000  00000000  00000edc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000f7b  00000000  00000000  000036b6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000011ac  00000000  00000000  00004631  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000648  00000000  00000000  000057e0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000009d5  00000000  00000000  00005e28  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002790  00000000  00000000  000067fd  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001f0  00000000  00000000  00008f8d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__ctors_end>
   4:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
   8:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
   c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  10:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  14:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  18:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  1c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  20:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  24:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  28:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  2c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  30:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  34:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  38:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  3c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  40:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  44:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  48:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  4c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  50:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  54:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  58:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  5c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  60:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  64:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  68:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  6c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  70:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  74:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  78:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  7c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  80:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  84:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  88:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  8c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  90:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  94:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  98:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  9c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  a0:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  a4:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  a8:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
  ac:	63 01       	movw	r12, r6
  ae:	67 01       	movw	r12, r14
  b0:	6b 01       	movw	r12, r22
  b2:	6f 01       	movw	r12, r30
  b4:	76 01       	movw	r14, r12
  b6:	7a 01       	movw	r14, r20
  b8:	7e 01       	movw	r14, r28
  ba:	82 01       	movw	r16, r4
  bc:	8a 01       	movw	r16, r20
  be:	8e 01       	movw	r16, r28
  c0:	92 01       	movw	r18, r4
  c2:	96 01       	movw	r18, r12
  c4:	9a 01       	movw	r18, r20
  c6:	9e 01       	movw	r18, r28
  c8:	a2 01       	movw	r20, r4
  ca:	a6 01       	movw	r20, r12
  cc:	aa 01       	movw	r20, r20
  ce:	b2 01       	movw	r22, r4
  d0:	b6 01       	movw	r22, r12
  d2:	be 01       	movw	r22, r28
  d4:	86 01       	movw	r16, r12
  d6:	c6 01       	movw	r24, r12
  d8:	ca 01       	movw	r24, r20
  da:	ce 01       	movw	r24, r28
  dc:	d2 01       	movw	r26, r4
  de:	d6 01       	movw	r26, r12
  e0:	da 01       	movw	r26, r20

000000e2 <__ctors_end>:
  e2:	11 24       	eor	r1, r1
  e4:	1f be       	out	0x3f, r1	; 63
  e6:	cf ef       	ldi	r28, 0xFF	; 255
  e8:	da e0       	ldi	r29, 0x0A	; 10
  ea:	de bf       	out	0x3e, r29	; 62
  ec:	cd bf       	out	0x3d, r28	; 61

000000ee <__do_clear_bss>:
  ee:	21 e0       	ldi	r18, 0x01	; 1
  f0:	a0 e0       	ldi	r26, 0x00	; 0
  f2:	b1 e0       	ldi	r27, 0x01	; 1
  f4:	01 c0       	rjmp	.+2      	; 0xf8 <.do_clear_bss_start>

000000f6 <.do_clear_bss_loop>:
  f6:	1d 92       	st	X+, r1

000000f8 <.do_clear_bss_start>:
  f8:	a0 31       	cpi	r26, 0x10	; 16
  fa:	b2 07       	cpc	r27, r18
  fc:	e1 f7       	brne	.-8      	; 0xf6 <.do_clear_bss_loop>
  fe:	0e 94 48 04 	call	0x890	; 0x890 <main>
 102:	0c 94 d9 05 	jmp	0xbb2	; 0xbb2 <_exit>

00000106 <__bad_interrupt>:
 106:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000010a <ADCInit>:

#include "R2R.h"

void ADCInit(void)
{
	ADCSRA |= (1 << ADPS2) | (1 << ADPS1) | (1 << ADPS0);
 10a:	aa e7       	ldi	r26, 0x7A	; 122
 10c:	b0 e0       	ldi	r27, 0x00	; 0
 10e:	8c 91       	ld	r24, X
 110:	87 60       	ori	r24, 0x07	; 7
 112:	8c 93       	st	X, r24
	ADMUX |= (1 << REFS0) | (1 << ADLAR); // 10 bit reading (Right adjust)
 114:	ec e7       	ldi	r30, 0x7C	; 124
 116:	f0 e0       	ldi	r31, 0x00	; 0
 118:	80 81       	ld	r24, Z
 11a:	80 66       	ori	r24, 0x60	; 96
 11c:	80 83       	st	Z, r24
	ADMUX &= ~(1 << MUX0); // set to pin 0 of port F
 11e:	80 81       	ld	r24, Z
 120:	8e 7f       	andi	r24, 0xFE	; 254
 122:	80 83       	st	Z, r24
	ADMUX &= ~(1 << MUX1); // set to pin 0 of port F
 124:	80 81       	ld	r24, Z
 126:	8d 7f       	andi	r24, 0xFD	; 253
 128:	80 83       	st	Z, r24
	ADMUX &= ~(1 << MUX2); // set to pin 0 of port F
 12a:	80 81       	ld	r24, Z
 12c:	8b 7f       	andi	r24, 0xFB	; 251
 12e:	80 83       	st	Z, r24
	ADMUX &= ~(1 << MUX3); // set to pin 0 of port F
 130:	80 81       	ld	r24, Z
 132:	87 7f       	andi	r24, 0xF7	; 247
 134:	80 83       	st	Z, r24
	ADMUX &= ~(1 << MUX4); // set to pin 0 of port F
 136:	80 81       	ld	r24, Z
 138:	8f 7e       	andi	r24, 0xEF	; 239
 13a:	80 83       	st	Z, r24
	ADCSRB &= ~(1 << MUX5); // set to pin 0 of port F
 13c:	eb e7       	ldi	r30, 0x7B	; 123
 13e:	f0 e0       	ldi	r31, 0x00	; 0
 140:	80 81       	ld	r24, Z
 142:	8f 7d       	andi	r24, 0xDF	; 223
 144:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADEN);  // Enable ADC
 146:	8c 91       	ld	r24, X
 148:	80 68       	ori	r24, 0x80	; 128
 14a:	8c 93       	st	X, r24
 14c:	08 95       	ret

0000014e <SPIXfer>:
}

uint8_t getOCD_TH(uint8_t motor)
{
	return (uint8_t)getParam(motor, OCD_TH);
}
 14e:	28 98       	cbi	0x05, 0	; 5
 150:	0e 94 41 04 	call	0x882	; 0x882 <transfer>
 154:	28 9a       	sbi	0x05, 0	; 5
 156:	08 95       	ret

00000158 <SPIXferMotors>:
 158:	ff 92       	push	r15
 15a:	0f 93       	push	r16
 15c:	1f 93       	push	r17
 15e:	cf 93       	push	r28
 160:	df 93       	push	r29
 162:	f6 2e       	mov	r15, r22
 164:	28 98       	cbi	0x05, 0	; 5
 166:	c3 e0       	ldi	r28, 0x03	; 3
 168:	d0 e0       	ldi	r29, 0x00	; 0
 16a:	08 2f       	mov	r16, r24
 16c:	10 e0       	ldi	r17, 0x00	; 0
 16e:	0c 17       	cp	r16, r28
 170:	1d 07       	cpc	r17, r29
 172:	21 f4       	brne	.+8      	; 0x17c <SPIXferMotors+0x24>
 174:	8f 2d       	mov	r24, r15
 176:	0e 94 a7 00 	call	0x14e	; 0x14e <SPIXfer>
 17a:	03 c0       	rjmp	.+6      	; 0x182 <SPIXferMotors+0x2a>
 17c:	80 e0       	ldi	r24, 0x00	; 0
 17e:	0e 94 a7 00 	call	0x14e	; 0x14e <SPIXfer>
 182:	21 97       	sbiw	r28, 0x01	; 1
 184:	a1 f7       	brne	.-24     	; 0x16e <SPIXferMotors+0x16>
 186:	28 9a       	sbi	0x05, 0	; 5
 188:	80 e0       	ldi	r24, 0x00	; 0
 18a:	df 91       	pop	r29
 18c:	cf 91       	pop	r28
 18e:	1f 91       	pop	r17
 190:	0f 91       	pop	r16
 192:	ff 90       	pop	r15
 194:	08 95       	ret

00000196 <SPIXferParam>:
 196:	6f 92       	push	r6
 198:	7f 92       	push	r7
 19a:	8f 92       	push	r8
 19c:	9f 92       	push	r9
 19e:	af 92       	push	r10
 1a0:	bf 92       	push	r11
 1a2:	cf 92       	push	r12
 1a4:	df 92       	push	r13
 1a6:	ef 92       	push	r14
 1a8:	ff 92       	push	r15
 1aa:	0f 93       	push	r16
 1ac:	1f 93       	push	r17
 1ae:	cf 93       	push	r28
 1b0:	df 93       	push	r29
 1b2:	78 2e       	mov	r7, r24
 1b4:	4a 01       	movw	r8, r20
 1b6:	5b 01       	movw	r10, r22
 1b8:	62 2e       	mov	r6, r18
 1ba:	02 2f       	mov	r16, r18
 1bc:	06 95       	lsr	r16
 1be:	06 95       	lsr	r16
 1c0:	06 95       	lsr	r16
 1c2:	82 2f       	mov	r24, r18
 1c4:	87 70       	andi	r24, 0x07	; 7
 1c6:	09 f0       	breq	.+2      	; 0x1ca <SPIXferParam+0x34>
 1c8:	0f 5f       	subi	r16, 0xFF	; 255
 1ca:	00 23       	and	r16, r16
 1cc:	41 f1       	breq	.+80     	; 0x21e <SPIXferParam+0x88>
 1ce:	c0 2f       	mov	r28, r16
 1d0:	d0 e0       	ldi	r29, 0x00	; 0
 1d2:	21 97       	sbiw	r28, 0x01	; 1
 1d4:	cc 0f       	add	r28, r28
 1d6:	dd 1f       	adc	r29, r29
 1d8:	cc 0f       	add	r28, r28
 1da:	dd 1f       	adc	r29, r29
 1dc:	cc 0f       	add	r28, r28
 1de:	dd 1f       	adc	r29, r29
 1e0:	10 e0       	ldi	r17, 0x00	; 0
 1e2:	80 e0       	ldi	r24, 0x00	; 0
 1e4:	90 e0       	ldi	r25, 0x00	; 0
 1e6:	dc 01       	movw	r26, r24
 1e8:	cc 24       	eor	r12, r12
 1ea:	d8 2e       	mov	r13, r24
 1ec:	e9 2e       	mov	r14, r25
 1ee:	fa 2e       	mov	r15, r26
 1f0:	c5 01       	movw	r24, r10
 1f2:	b4 01       	movw	r22, r8
 1f4:	0c 2e       	mov	r0, r28
 1f6:	04 c0       	rjmp	.+8      	; 0x200 <SPIXferParam+0x6a>
 1f8:	96 95       	lsr	r25
 1fa:	87 95       	ror	r24
 1fc:	77 95       	ror	r23
 1fe:	67 95       	ror	r22
 200:	0a 94       	dec	r0
 202:	d2 f7       	brpl	.-12     	; 0x1f8 <SPIXferParam+0x62>
 204:	87 2d       	mov	r24, r7
 206:	0e 94 ac 00 	call	0x158	; 0x158 <SPIXferMotors>
 20a:	a7 01       	movw	r20, r14
 20c:	96 01       	movw	r18, r12
 20e:	28 2b       	or	r18, r24
 210:	da 01       	movw	r26, r20
 212:	c9 01       	movw	r24, r18
 214:	1f 5f       	subi	r17, 0xFF	; 255
 216:	28 97       	sbiw	r28, 0x08	; 8
 218:	01 13       	cpse	r16, r17
 21a:	e6 cf       	rjmp	.-52     	; 0x1e8 <SPIXferParam+0x52>
 21c:	03 c0       	rjmp	.+6      	; 0x224 <SPIXferParam+0x8e>
 21e:	80 e0       	ldi	r24, 0x00	; 0
 220:	90 e0       	ldi	r25, 0x00	; 0
 222:	dc 01       	movw	r26, r24
 224:	20 e2       	ldi	r18, 0x20	; 32
 226:	30 e0       	ldi	r19, 0x00	; 0
 228:	26 19       	sub	r18, r6
 22a:	31 09       	sbc	r19, r1
 22c:	4f ef       	ldi	r20, 0xFF	; 255
 22e:	5f ef       	ldi	r21, 0xFF	; 255
 230:	ba 01       	movw	r22, r20
 232:	04 c0       	rjmp	.+8      	; 0x23c <SPIXferParam+0xa6>
 234:	76 95       	lsr	r23
 236:	67 95       	ror	r22
 238:	57 95       	ror	r21
 23a:	47 95       	ror	r20
 23c:	2a 95       	dec	r18
 23e:	d2 f7       	brpl	.-12     	; 0x234 <SPIXferParam+0x9e>
 240:	8a 01       	movw	r16, r20
 242:	9b 01       	movw	r18, r22
 244:	08 23       	and	r16, r24
 246:	19 23       	and	r17, r25
 248:	2a 23       	and	r18, r26
 24a:	3b 23       	and	r19, r27
 24c:	c9 01       	movw	r24, r18
 24e:	b8 01       	movw	r22, r16
 250:	df 91       	pop	r29
 252:	cf 91       	pop	r28
 254:	1f 91       	pop	r17
 256:	0f 91       	pop	r16
 258:	ff 90       	pop	r15
 25a:	ef 90       	pop	r14
 25c:	df 90       	pop	r13
 25e:	cf 90       	pop	r12
 260:	bf 90       	pop	r11
 262:	af 90       	pop	r10
 264:	9f 90       	pop	r9
 266:	8f 90       	pop	r8
 268:	7f 90       	pop	r7
 26a:	6f 90       	pop	r6
 26c:	08 95       	ret

0000026e <getStatus>:
 26e:	cf 93       	push	r28
 270:	c8 2f       	mov	r28, r24
 272:	80 ed       	ldi	r24, 0xD0	; 208
 274:	0e 94 a7 00 	call	0x14e	; 0x14e <SPIXfer>
 278:	60 e0       	ldi	r22, 0x00	; 0
 27a:	8c 2f       	mov	r24, r28
 27c:	0e 94 ac 00 	call	0x158	; 0x158 <SPIXferMotors>
 280:	60 e0       	ldi	r22, 0x00	; 0
 282:	8c 2f       	mov	r24, r28
 284:	0e 94 ac 00 	call	0x158	; 0x158 <SPIXferMotors>
 288:	cf 91       	pop	r28
 28a:	08 95       	ret

0000028c <powerSTEP01_GPIO_Init>:
 28c:	20 9a       	sbi	0x04, 0	; 4
 28e:	28 9a       	sbi	0x05, 0	; 5
 290:	87 b1       	in	r24, 0x07	; 7
 292:	87 b9       	out	0x07, r24	; 7
 294:	88 b1       	in	r24, 0x08	; 8
 296:	80 6c       	ori	r24, 0xC0	; 192
 298:	88 b9       	out	0x08, r24	; 8
 29a:	6e 9a       	sbi	0x0d, 6	; 13
 29c:	76 98       	cbi	0x0e, 6	; 14
 29e:	08 95       	ret

000002a0 <releaseReset>:
 2a0:	76 9a       	sbi	0x0e, 6	; 14
 2a2:	08 95       	ret

000002a4 <paramHandler>:
 2a4:	0f 93       	push	r16
 2a6:	1f 93       	push	r17
 2a8:	e6 2f       	mov	r30, r22
 2aa:	ba 01       	movw	r22, r20
 2ac:	a9 01       	movw	r20, r18
 2ae:	0e 2f       	mov	r16, r30
 2b0:	10 e0       	ldi	r17, 0x00	; 0
 2b2:	f8 01       	movw	r30, r16
 2b4:	31 97       	sbiw	r30, 0x01	; 1
 2b6:	eb 31       	cpi	r30, 0x1B	; 27
 2b8:	f1 05       	cpc	r31, r1
 2ba:	08 f0       	brcs	.+2      	; 0x2be <paramHandler+0x1a>
 2bc:	82 c0       	rjmp	.+260    	; 0x3c2 <paramHandler+0x11e>
 2be:	ea 5a       	subi	r30, 0xAA	; 170
 2c0:	ff 4f       	sbci	r31, 0xFF	; 255
 2c2:	0c 94 d3 05 	jmp	0xba6	; 0xba6 <__tablejump2__>
 2c6:	26 e1       	ldi	r18, 0x16	; 22
 2c8:	0e 94 cb 00 	call	0x196	; 0x196 <SPIXferParam>
 2cc:	80 c0       	rjmp	.+256    	; 0x3ce <paramHandler+0x12a>
 2ce:	29 e0       	ldi	r18, 0x09	; 9
 2d0:	0e 94 cb 00 	call	0x196	; 0x196 <SPIXferParam>
 2d4:	7c c0       	rjmp	.+248    	; 0x3ce <paramHandler+0x12a>
 2d6:	26 e1       	ldi	r18, 0x16	; 22
 2d8:	0e 94 cb 00 	call	0x196	; 0x196 <SPIXferParam>
 2dc:	78 c0       	rjmp	.+240    	; 0x3ce <paramHandler+0x12a>
 2de:	24 e1       	ldi	r18, 0x14	; 20
 2e0:	40 e0       	ldi	r20, 0x00	; 0
 2e2:	50 e0       	ldi	r21, 0x00	; 0
 2e4:	ba 01       	movw	r22, r20
 2e6:	0e 94 cb 00 	call	0x196	; 0x196 <SPIXferParam>
 2ea:	71 c0       	rjmp	.+226    	; 0x3ce <paramHandler+0x12a>
 2ec:	2c e0       	ldi	r18, 0x0C	; 12
 2ee:	0e 94 cb 00 	call	0x196	; 0x196 <SPIXferParam>
 2f2:	6d c0       	rjmp	.+218    	; 0x3ce <paramHandler+0x12a>
 2f4:	2c e0       	ldi	r18, 0x0C	; 12
 2f6:	0e 94 cb 00 	call	0x196	; 0x196 <SPIXferParam>
 2fa:	69 c0       	rjmp	.+210    	; 0x3ce <paramHandler+0x12a>
 2fc:	2a e0       	ldi	r18, 0x0A	; 10
 2fe:	0e 94 cb 00 	call	0x196	; 0x196 <SPIXferParam>
 302:	65 c0       	rjmp	.+202    	; 0x3ce <paramHandler+0x12a>
 304:	2d e0       	ldi	r18, 0x0D	; 13
 306:	0e 94 cb 00 	call	0x196	; 0x196 <SPIXferParam>
 30a:	61 c0       	rjmp	.+194    	; 0x3ce <paramHandler+0x12a>
 30c:	2a e0       	ldi	r18, 0x0A	; 10
 30e:	0e 94 cb 00 	call	0x196	; 0x196 <SPIXferParam>
 312:	5d c0       	rjmp	.+186    	; 0x3ce <paramHandler+0x12a>
 314:	28 e0       	ldi	r18, 0x08	; 8
 316:	0e 94 cb 00 	call	0x196	; 0x196 <SPIXferParam>
 31a:	59 c0       	rjmp	.+178    	; 0x3ce <paramHandler+0x12a>
 31c:	28 e0       	ldi	r18, 0x08	; 8
 31e:	0e 94 cb 00 	call	0x196	; 0x196 <SPIXferParam>
 322:	55 c0       	rjmp	.+170    	; 0x3ce <paramHandler+0x12a>
 324:	28 e0       	ldi	r18, 0x08	; 8
 326:	0e 94 cb 00 	call	0x196	; 0x196 <SPIXferParam>
 32a:	51 c0       	rjmp	.+162    	; 0x3ce <paramHandler+0x12a>
 32c:	28 e0       	ldi	r18, 0x08	; 8
 32e:	0e 94 cb 00 	call	0x196	; 0x196 <SPIXferParam>
 332:	4d c0       	rjmp	.+154    	; 0x3ce <paramHandler+0x12a>
 334:	2e e0       	ldi	r18, 0x0E	; 14
 336:	0e 94 cb 00 	call	0x196	; 0x196 <SPIXferParam>
 33a:	49 c0       	rjmp	.+146    	; 0x3ce <paramHandler+0x12a>
 33c:	28 e0       	ldi	r18, 0x08	; 8
 33e:	0e 94 cb 00 	call	0x196	; 0x196 <SPIXferParam>
 342:	45 c0       	rjmp	.+138    	; 0x3ce <paramHandler+0x12a>
 344:	28 e0       	ldi	r18, 0x08	; 8
 346:	0e 94 cb 00 	call	0x196	; 0x196 <SPIXferParam>
 34a:	41 c0       	rjmp	.+130    	; 0x3ce <paramHandler+0x12a>
 34c:	28 e0       	ldi	r18, 0x08	; 8
 34e:	0e 94 cb 00 	call	0x196	; 0x196 <SPIXferParam>
 352:	3d c0       	rjmp	.+122    	; 0x3ce <paramHandler+0x12a>
 354:	4f 70       	andi	r20, 0x0F	; 15
 356:	55 27       	eor	r21, r21
 358:	66 27       	eor	r22, r22
 35a:	77 27       	eor	r23, r23
 35c:	28 e0       	ldi	r18, 0x08	; 8
 35e:	0e 94 cb 00 	call	0x196	; 0x196 <SPIXferParam>
 362:	35 c0       	rjmp	.+106    	; 0x3ce <paramHandler+0x12a>
 364:	28 e0       	ldi	r18, 0x08	; 8
 366:	0e 94 cb 00 	call	0x196	; 0x196 <SPIXferParam>
 36a:	31 c0       	rjmp	.+98     	; 0x3ce <paramHandler+0x12a>
 36c:	4f 71       	andi	r20, 0x1F	; 31
 36e:	55 27       	eor	r21, r21
 370:	66 27       	eor	r22, r22
 372:	77 27       	eor	r23, r23
 374:	28 e0       	ldi	r18, 0x08	; 8
 376:	0e 94 cb 00 	call	0x196	; 0x196 <SPIXferParam>
 37a:	29 c0       	rjmp	.+82     	; 0x3ce <paramHandler+0x12a>
 37c:	4f 71       	andi	r20, 0x1F	; 31
 37e:	55 27       	eor	r21, r21
 380:	66 27       	eor	r22, r22
 382:	77 27       	eor	r23, r23
 384:	28 e0       	ldi	r18, 0x08	; 8
 386:	0e 94 cb 00 	call	0x196	; 0x196 <SPIXferParam>
 38a:	21 c0       	rjmp	.+66     	; 0x3ce <paramHandler+0x12a>
 38c:	28 e0       	ldi	r18, 0x08	; 8
 38e:	0e 94 cb 00 	call	0x196	; 0x196 <SPIXferParam>
 392:	1d c0       	rjmp	.+58     	; 0x3ce <paramHandler+0x12a>
 394:	28 e0       	ldi	r18, 0x08	; 8
 396:	0e 94 cb 00 	call	0x196	; 0x196 <SPIXferParam>
 39a:	19 c0       	rjmp	.+50     	; 0x3ce <paramHandler+0x12a>
 39c:	20 e1       	ldi	r18, 0x10	; 16
 39e:	0e 94 cb 00 	call	0x196	; 0x196 <SPIXferParam>
 3a2:	15 c0       	rjmp	.+42     	; 0x3ce <paramHandler+0x12a>
 3a4:	28 e0       	ldi	r18, 0x08	; 8
 3a6:	0e 94 cb 00 	call	0x196	; 0x196 <SPIXferParam>
 3aa:	11 c0       	rjmp	.+34     	; 0x3ce <paramHandler+0x12a>
 3ac:	20 e1       	ldi	r18, 0x10	; 16
 3ae:	0e 94 cb 00 	call	0x196	; 0x196 <SPIXferParam>
 3b2:	0d c0       	rjmp	.+26     	; 0x3ce <paramHandler+0x12a>
 3b4:	20 e1       	ldi	r18, 0x10	; 16
 3b6:	40 e0       	ldi	r20, 0x00	; 0
 3b8:	50 e0       	ldi	r21, 0x00	; 0
 3ba:	ba 01       	movw	r22, r20
 3bc:	0e 94 cb 00 	call	0x196	; 0x196 <SPIXferParam>
 3c0:	06 c0       	rjmp	.+12     	; 0x3ce <paramHandler+0x12a>
 3c2:	64 2f       	mov	r22, r20
 3c4:	0e 94 ac 00 	call	0x158	; 0x158 <SPIXferMotors>
 3c8:	60 e0       	ldi	r22, 0x00	; 0
 3ca:	70 e0       	ldi	r23, 0x00	; 0
 3cc:	cb 01       	movw	r24, r22
 3ce:	1f 91       	pop	r17
 3d0:	0f 91       	pop	r16
 3d2:	08 95       	ret

000003d4 <setParam>:
 3d4:	cf 92       	push	r12
 3d6:	df 92       	push	r13
 3d8:	ef 92       	push	r14
 3da:	ff 92       	push	r15
 3dc:	0f 93       	push	r16
 3de:	1f 93       	push	r17
 3e0:	cf 93       	push	r28
 3e2:	df 93       	push	r29
 3e4:	c8 2f       	mov	r28, r24
 3e6:	d4 2f       	mov	r29, r20
 3e8:	68 01       	movw	r12, r16
 3ea:	79 01       	movw	r14, r18
 3ec:	64 2f       	mov	r22, r20
 3ee:	0e 94 ac 00 	call	0x158	; 0x158 <SPIXferMotors>
 3f2:	a7 01       	movw	r20, r14
 3f4:	96 01       	movw	r18, r12
 3f6:	6d 2f       	mov	r22, r29
 3f8:	8c 2f       	mov	r24, r28
 3fa:	0e 94 52 01 	call	0x2a4	; 0x2a4 <paramHandler>
 3fe:	df 91       	pop	r29
 400:	cf 91       	pop	r28
 402:	1f 91       	pop	r17
 404:	0f 91       	pop	r16
 406:	ff 90       	pop	r15
 408:	ef 90       	pop	r14
 40a:	df 90       	pop	r13
 40c:	cf 90       	pop	r12
 40e:	08 95       	ret

00000410 <setRunKval>:
 410:	0f 93       	push	r16
 412:	1f 93       	push	r17
 414:	06 2f       	mov	r16, r22
 416:	10 e0       	ldi	r17, 0x00	; 0
 418:	20 e0       	ldi	r18, 0x00	; 0
 41a:	30 e0       	ldi	r19, 0x00	; 0
 41c:	4a e0       	ldi	r20, 0x0A	; 10
 41e:	60 e0       	ldi	r22, 0x00	; 0
 420:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <setParam>
 424:	1f 91       	pop	r17
 426:	0f 91       	pop	r16
 428:	08 95       	ret

0000042a <setHoldKval>:
 42a:	0f 93       	push	r16
 42c:	1f 93       	push	r17
 42e:	06 2f       	mov	r16, r22
 430:	10 e0       	ldi	r17, 0x00	; 0
 432:	20 e0       	ldi	r18, 0x00	; 0
 434:	30 e0       	ldi	r19, 0x00	; 0
 436:	49 e0       	ldi	r20, 0x09	; 9
 438:	60 e0       	ldi	r22, 0x00	; 0
 43a:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <setParam>
 43e:	1f 91       	pop	r17
 440:	0f 91       	pop	r16
 442:	08 95       	ret

00000444 <setAccKval>:
 444:	0f 93       	push	r16
 446:	1f 93       	push	r17
 448:	06 2f       	mov	r16, r22
 44a:	10 e0       	ldi	r17, 0x00	; 0
 44c:	20 e0       	ldi	r18, 0x00	; 0
 44e:	30 e0       	ldi	r19, 0x00	; 0
 450:	4b e0       	ldi	r20, 0x0B	; 11
 452:	60 e0       	ldi	r22, 0x00	; 0
 454:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <setParam>
 458:	1f 91       	pop	r17
 45a:	0f 91       	pop	r16
 45c:	08 95       	ret

0000045e <setDecKval>:
 45e:	0f 93       	push	r16
 460:	1f 93       	push	r17
 462:	06 2f       	mov	r16, r22
 464:	10 e0       	ldi	r17, 0x00	; 0
 466:	20 e0       	ldi	r18, 0x00	; 0
 468:	30 e0       	ldi	r19, 0x00	; 0
 46a:	4c e0       	ldi	r20, 0x0C	; 12
 46c:	60 e0       	ldi	r22, 0x00	; 0
 46e:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <setParam>
 472:	1f 91       	pop	r17
 474:	0f 91       	pop	r16
 476:	08 95       	ret

00000478 <setOCD_TH>:
 478:	0f 93       	push	r16
 47a:	1f 93       	push	r17
 47c:	06 2f       	mov	r16, r22
 47e:	10 e0       	ldi	r17, 0x00	; 0
 480:	20 e0       	ldi	r18, 0x00	; 0
 482:	30 e0       	ldi	r19, 0x00	; 0
 484:	43 e1       	ldi	r20, 0x13	; 19
 486:	60 e0       	ldi	r22, 0x00	; 0
 488:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <setParam>
 48c:	1f 91       	pop	r17
 48e:	0f 91       	pop	r16
 490:	08 95       	ret

00000492 <setSTALL_TH>:
 492:	0f 93       	push	r16
 494:	1f 93       	push	r17
 496:	06 2f       	mov	r16, r22
 498:	10 e0       	ldi	r17, 0x00	; 0
 49a:	20 e0       	ldi	r18, 0x00	; 0
 49c:	30 e0       	ldi	r19, 0x00	; 0
 49e:	44 e1       	ldi	r20, 0x14	; 20
 4a0:	60 e0       	ldi	r22, 0x00	; 0
 4a2:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <setParam>
 4a6:	1f 91       	pop	r17
 4a8:	0f 91       	pop	r16
 4aa:	08 95       	ret

000004ac <setAcc>:
 4ac:	0f 93       	push	r16
 4ae:	1f 93       	push	r17
 4b0:	cf 93       	push	r28
 4b2:	c8 2f       	mov	r28, r24
 4b4:	cb 01       	movw	r24, r22
 4b6:	ba 01       	movw	r22, r20
 4b8:	0e 94 97 04 	call	0x92e	; 0x92e <__floatunsisf>
 4bc:	2c e8       	ldi	r18, 0x8C	; 140
 4be:	3c eb       	ldi	r19, 0xBC	; 188
 4c0:	4c e0       	ldi	r20, 0x0C	; 12
 4c2:	5e e3       	ldi	r21, 0x3E	; 62
 4c4:	0e 94 3e 05 	call	0xa7c	; 0xa7c <__mulsf3>
 4c8:	0e 94 68 04 	call	0x8d0	; 0x8d0 <__fixunssfsi>
 4cc:	8b 01       	movw	r16, r22
 4ce:	9c 01       	movw	r18, r24
 4d0:	01 15       	cp	r16, r1
 4d2:	80 e1       	ldi	r24, 0x10	; 16
 4d4:	18 07       	cpc	r17, r24
 4d6:	21 05       	cpc	r18, r1
 4d8:	31 05       	cpc	r19, r1
 4da:	20 f0       	brcs	.+8      	; 0x4e4 <setAcc+0x38>
 4dc:	0f ef       	ldi	r16, 0xFF	; 255
 4de:	1f e0       	ldi	r17, 0x0F	; 15
 4e0:	20 e0       	ldi	r18, 0x00	; 0
 4e2:	30 e0       	ldi	r19, 0x00	; 0
 4e4:	45 e0       	ldi	r20, 0x05	; 5
 4e6:	60 e0       	ldi	r22, 0x00	; 0
 4e8:	8c 2f       	mov	r24, r28
 4ea:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <setParam>
 4ee:	cf 91       	pop	r28
 4f0:	1f 91       	pop	r17
 4f2:	0f 91       	pop	r16
 4f4:	08 95       	ret

000004f6 <setDec>:
 4f6:	0f 93       	push	r16
 4f8:	1f 93       	push	r17
 4fa:	cf 93       	push	r28
 4fc:	c8 2f       	mov	r28, r24
 4fe:	cb 01       	movw	r24, r22
 500:	ba 01       	movw	r22, r20
 502:	0e 94 97 04 	call	0x92e	; 0x92e <__floatunsisf>
 506:	2c e8       	ldi	r18, 0x8C	; 140
 508:	3c eb       	ldi	r19, 0xBC	; 188
 50a:	4c e0       	ldi	r20, 0x0C	; 12
 50c:	5e e3       	ldi	r21, 0x3E	; 62
 50e:	0e 94 3e 05 	call	0xa7c	; 0xa7c <__mulsf3>
 512:	0e 94 68 04 	call	0x8d0	; 0x8d0 <__fixunssfsi>
 516:	8b 01       	movw	r16, r22
 518:	9c 01       	movw	r18, r24
 51a:	01 15       	cp	r16, r1
 51c:	80 e1       	ldi	r24, 0x10	; 16
 51e:	18 07       	cpc	r17, r24
 520:	21 05       	cpc	r18, r1
 522:	31 05       	cpc	r19, r1
 524:	20 f0       	brcs	.+8      	; 0x52e <setDec+0x38>
 526:	0f ef       	ldi	r16, 0xFF	; 255
 528:	1f e0       	ldi	r17, 0x0F	; 15
 52a:	20 e0       	ldi	r18, 0x00	; 0
 52c:	30 e0       	ldi	r19, 0x00	; 0
 52e:	46 e0       	ldi	r20, 0x06	; 6
 530:	60 e0       	ldi	r22, 0x00	; 0
 532:	8c 2f       	mov	r24, r28
 534:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <setParam>
 538:	cf 91       	pop	r28
 53a:	1f 91       	pop	r17
 53c:	0f 91       	pop	r16
 53e:	08 95       	ret

00000540 <getParam>:
 540:	cf 93       	push	r28
 542:	df 93       	push	r29
 544:	c8 2f       	mov	r28, r24
 546:	d6 2f       	mov	r29, r22
 548:	60 62       	ori	r22, 0x20	; 32
 54a:	0e 94 ac 00 	call	0x158	; 0x158 <SPIXferMotors>
 54e:	20 e0       	ldi	r18, 0x00	; 0
 550:	30 e0       	ldi	r19, 0x00	; 0
 552:	a9 01       	movw	r20, r18
 554:	6d 2f       	mov	r22, r29
 556:	8c 2f       	mov	r24, r28
 558:	0e 94 52 01 	call	0x2a4	; 0x2a4 <paramHandler>
 55c:	df 91       	pop	r29
 55e:	cf 91       	pop	r28
 560:	08 95       	ret

00000562 <setOscMode>:
 562:	ff 92       	push	r15
 564:	0f 93       	push	r16
 566:	1f 93       	push	r17
 568:	cf 93       	push	r28
 56a:	df 93       	push	r29
 56c:	f8 2e       	mov	r15, r24
 56e:	eb 01       	movw	r28, r22
 570:	6a e1       	ldi	r22, 0x1A	; 26
 572:	0e 94 a0 02 	call	0x540	; 0x540 <getParam>
 576:	dc 01       	movw	r26, r24
 578:	cb 01       	movw	r24, r22
 57a:	80 7f       	andi	r24, 0xF0	; 240
 57c:	cf 70       	andi	r28, 0x0F	; 15
 57e:	dd 27       	eor	r29, r29
 580:	8e 01       	movw	r16, r28
 582:	dd 0f       	add	r29, r29
 584:	22 0b       	sbc	r18, r18
 586:	33 0b       	sbc	r19, r19
 588:	08 2b       	or	r16, r24
 58a:	19 2b       	or	r17, r25
 58c:	2a 2b       	or	r18, r26
 58e:	3b 2b       	or	r19, r27
 590:	4a e1       	ldi	r20, 0x1A	; 26
 592:	60 e0       	ldi	r22, 0x00	; 0
 594:	8f 2d       	mov	r24, r15
 596:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <setParam>
 59a:	df 91       	pop	r29
 59c:	cf 91       	pop	r28
 59e:	1f 91       	pop	r17
 5a0:	0f 91       	pop	r16
 5a2:	ff 90       	pop	r15
 5a4:	08 95       	ret

000005a6 <setSwitchMode>:
 5a6:	ff 92       	push	r15
 5a8:	0f 93       	push	r16
 5aa:	1f 93       	push	r17
 5ac:	cf 93       	push	r28
 5ae:	df 93       	push	r29
 5b0:	f8 2e       	mov	r15, r24
 5b2:	eb 01       	movw	r28, r22
 5b4:	6a e1       	ldi	r22, 0x1A	; 26
 5b6:	0e 94 a0 02 	call	0x540	; 0x540 <getParam>
 5ba:	dc 01       	movw	r26, r24
 5bc:	cb 01       	movw	r24, r22
 5be:	8f 7e       	andi	r24, 0xEF	; 239
 5c0:	c0 71       	andi	r28, 0x10	; 16
 5c2:	dd 27       	eor	r29, r29
 5c4:	8e 01       	movw	r16, r28
 5c6:	dd 0f       	add	r29, r29
 5c8:	22 0b       	sbc	r18, r18
 5ca:	33 0b       	sbc	r19, r19
 5cc:	08 2b       	or	r16, r24
 5ce:	19 2b       	or	r17, r25
 5d0:	2a 2b       	or	r18, r26
 5d2:	3b 2b       	or	r19, r27
 5d4:	4a e1       	ldi	r20, 0x1A	; 26
 5d6:	60 e0       	ldi	r22, 0x00	; 0
 5d8:	8f 2d       	mov	r24, r15
 5da:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <setParam>
 5de:	df 91       	pop	r29
 5e0:	cf 91       	pop	r28
 5e2:	1f 91       	pop	r17
 5e4:	0f 91       	pop	r16
 5e6:	ff 90       	pop	r15
 5e8:	08 95       	ret

000005ea <setVoltageComp>:
 5ea:	ff 92       	push	r15
 5ec:	0f 93       	push	r16
 5ee:	1f 93       	push	r17
 5f0:	cf 93       	push	r28
 5f2:	df 93       	push	r29
 5f4:	f8 2e       	mov	r15, r24
 5f6:	eb 01       	movw	r28, r22
 5f8:	6a e1       	ldi	r22, 0x1A	; 26
 5fa:	0e 94 a0 02 	call	0x540	; 0x540 <getParam>
 5fe:	dc 01       	movw	r26, r24
 600:	cb 01       	movw	r24, r22
 602:	8f 7d       	andi	r24, 0xDF	; 223
 604:	c0 72       	andi	r28, 0x20	; 32
 606:	dd 27       	eor	r29, r29
 608:	8e 01       	movw	r16, r28
 60a:	dd 0f       	add	r29, r29
 60c:	22 0b       	sbc	r18, r18
 60e:	33 0b       	sbc	r19, r19
 610:	08 2b       	or	r16, r24
 612:	19 2b       	or	r17, r25
 614:	2a 2b       	or	r18, r26
 616:	3b 2b       	or	r19, r27
 618:	4a e1       	ldi	r20, 0x1A	; 26
 61a:	60 e0       	ldi	r22, 0x00	; 0
 61c:	8f 2d       	mov	r24, r15
 61e:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <setParam>
 622:	df 91       	pop	r29
 624:	cf 91       	pop	r28
 626:	1f 91       	pop	r17
 628:	0f 91       	pop	r16
 62a:	ff 90       	pop	r15
 62c:	08 95       	ret

0000062e <setPWMFreq>:
 62e:	0f 93       	push	r16
 630:	1f 93       	push	r17
 632:	cf 93       	push	r28
 634:	c8 2f       	mov	r28, r24
 636:	6a e1       	ldi	r22, 0x1A	; 26
 638:	0e 94 a0 02 	call	0x540	; 0x540 <getParam>
 63c:	8b 01       	movw	r16, r22
 63e:	9c 01       	movw	r18, r24
 640:	13 70       	andi	r17, 0x03	; 3
 642:	22 27       	eor	r18, r18
 644:	33 27       	eor	r19, r19
 646:	4a e1       	ldi	r20, 0x1A	; 26
 648:	60 e0       	ldi	r22, 0x00	; 0
 64a:	8c 2f       	mov	r24, r28
 64c:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <setParam>
 650:	cf 91       	pop	r28
 652:	1f 91       	pop	r17
 654:	0f 91       	pop	r16
 656:	08 95       	ret

00000658 <setOCShutdown>:
 658:	0f 93       	push	r16
 65a:	1f 93       	push	r17
 65c:	cf 93       	push	r28
 65e:	df 93       	push	r29
 660:	d8 2f       	mov	r29, r24
 662:	c6 2f       	mov	r28, r22
 664:	6a e1       	ldi	r22, 0x1A	; 26
 666:	0e 94 a0 02 	call	0x540	; 0x540 <getParam>
 66a:	8b 01       	movw	r16, r22
 66c:	9c 01       	movw	r18, r24
 66e:	0f 77       	andi	r16, 0x7F	; 127
 670:	c0 78       	andi	r28, 0x80	; 128
 672:	0c 2b       	or	r16, r28
 674:	4a e1       	ldi	r20, 0x1A	; 26
 676:	60 e0       	ldi	r22, 0x00	; 0
 678:	8d 2f       	mov	r24, r29
 67a:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <setParam>
 67e:	df 91       	pop	r29
 680:	cf 91       	pop	r28
 682:	1f 91       	pop	r17
 684:	0f 91       	pop	r16
 686:	08 95       	ret

00000688 <setSlewRate>:
 688:	0f 93       	push	r16
 68a:	1f 93       	push	r17
 68c:	cf 93       	push	r28
 68e:	df 93       	push	r29
 690:	c8 2f       	mov	r28, r24
 692:	d6 2f       	mov	r29, r22
 694:	68 e1       	ldi	r22, 0x18	; 24
 696:	0e 94 a0 02 	call	0x540	; 0x540 <getParam>
 69a:	8b 01       	movw	r16, r22
 69c:	9c 01       	movw	r18, r24
 69e:	00 27       	eor	r16, r16
 6a0:	22 27       	eor	r18, r18
 6a2:	33 27       	eor	r19, r19
 6a4:	0d 2b       	or	r16, r29
 6a6:	48 e1       	ldi	r20, 0x18	; 24
 6a8:	60 e0       	ldi	r22, 0x00	; 0
 6aa:	8c 2f       	mov	r24, r28
 6ac:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <setParam>
 6b0:	df 91       	pop	r29
 6b2:	cf 91       	pop	r28
 6b4:	1f 91       	pop	r17
 6b6:	0f 91       	pop	r16
 6b8:	08 95       	ret

000006ba <maxSpdCalc>:
	return retVal;
}

unsigned long maxSpdCalc (unsigned long stepsParSec)
{
	unsigned long temp = ceil(stepsParSec* .065536);
 6ba:	0e 94 97 04 	call	0x92e	; 0x92e <__floatunsisf>
 6be:	2d eb       	ldi	r18, 0xBD	; 189
 6c0:	37 e3       	ldi	r19, 0x37	; 55
 6c2:	46 e8       	ldi	r20, 0x86	; 134
 6c4:	5d e3       	ldi	r21, 0x3D	; 61
 6c6:	0e 94 3e 05 	call	0xa7c	; 0xa7c <__mulsf3>
 6ca:	0e 94 51 04 	call	0x8a2	; 0x8a2 <ceil>
 6ce:	0e 94 68 04 	call	0x8d0	; 0x8d0 <__fixunssfsi>
 6d2:	61 15       	cp	r22, r1
 6d4:	24 e0       	ldi	r18, 0x04	; 4
 6d6:	72 07       	cpc	r23, r18
 6d8:	81 05       	cpc	r24, r1
 6da:	91 05       	cpc	r25, r1
 6dc:	20 f0       	brcs	.+8      	; 0x6e6 <maxSpdCalc+0x2c>
 6de:	6f ef       	ldi	r22, 0xFF	; 255
 6e0:	73 e0       	ldi	r23, 0x03	; 3
 6e2:	80 e0       	ldi	r24, 0x00	; 0
 6e4:	90 e0       	ldi	r25, 0x00	; 0
	if (temp > 0x000003FF) return 0x000003FF;
	else return temp;
}
 6e6:	08 95       	ret

000006e8 <setMaxSpeed>:
	
	stepModeConfig |= (stepMode &0x07);
}

void setMaxSpeed(uint8_t motor, unsigned long stepsPerSecond)
{
 6e8:	0f 93       	push	r16
 6ea:	1f 93       	push	r17
 6ec:	cf 93       	push	r28
 6ee:	c8 2f       	mov	r28, r24
	unsigned long integerSpeed = maxSpdCalc(stepsPerSecond);
 6f0:	cb 01       	movw	r24, r22
 6f2:	ba 01       	movw	r22, r20
 6f4:	0e 94 5d 03 	call	0x6ba	; 0x6ba <maxSpdCalc>
 6f8:	8b 01       	movw	r16, r22
 6fa:	9c 01       	movw	r18, r24
	
	setParam(motor, 0, MAX_SPEED, integerSpeed);
 6fc:	47 e0       	ldi	r20, 0x07	; 7
 6fe:	60 e0       	ldi	r22, 0x00	; 0
 700:	8c 2f       	mov	r24, r28
 702:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <setParam>
}
 706:	cf 91       	pop	r28
 708:	1f 91       	pop	r17
 70a:	0f 91       	pop	r16
 70c:	08 95       	ret

0000070e <motorControl_Init>:
	unsigned long mask = 0xFFFFFFFF >> (32-bitLen);
	return retVal & mask;
}

void motorControl_Init(void)
{
 70e:	ef 92       	push	r14
 710:	ff 92       	push	r15
 712:	0f 93       	push	r16
 714:	1f 93       	push	r17
 716:	cf 93       	push	r28
	uint8_t i;
	uint16_t config[3];
	
	motorParam.RunKval = 0xA0;
 718:	e0 e0       	ldi	r30, 0x00	; 0
 71a:	f1 e0       	ldi	r31, 0x01	; 1
 71c:	80 ea       	ldi	r24, 0xA0	; 160
 71e:	80 83       	st	Z, r24
	motorParam.HoldKval = 0xA0;
 720:	81 83       	std	Z+1, r24	; 0x01
	motorParam.AccKval = 0xA0;
 722:	82 83       	std	Z+2, r24	; 0x02
	motorParam.DecKval = 0xA0;
 724:	83 83       	std	Z+3, r24	; 0x03
	motorParam.maxSpeed = 200;
 726:	88 ec       	ldi	r24, 0xC8	; 200
 728:	90 e0       	ldi	r25, 0x00	; 0
 72a:	a0 e0       	ldi	r26, 0x00	; 0
 72c:	b0 e0       	ldi	r27, 0x00	; 0
 72e:	84 83       	std	Z+4, r24	; 0x04
 730:	95 83       	std	Z+5, r25	; 0x05
 732:	a6 83       	std	Z+6, r26	; 0x06
 734:	b7 83       	std	Z+7, r27	; 0x07
	motorParam.Acc = 200;
 736:	80 87       	std	Z+8, r24	; 0x08
 738:	91 87       	std	Z+9, r25	; 0x09
 73a:	a2 87       	std	Z+10, r26	; 0x0a
 73c:	b3 87       	std	Z+11, r27	; 0x0b
	motorParam.Dec = 100;
 73e:	84 e6       	ldi	r24, 0x64	; 100
 740:	90 e0       	ldi	r25, 0x00	; 0
 742:	a0 e0       	ldi	r26, 0x00	; 0
 744:	b0 e0       	ldi	r27, 0x00	; 0
 746:	84 87       	std	Z+12, r24	; 0x0c
 748:	95 87       	std	Z+13, r25	; 0x0d
 74a:	a6 87       	std	Z+14, r26	; 0x0e
 74c:	b7 87       	std	Z+15, r27	; 0x0f
	
	powerSTEP01_GPIO_Init();
 74e:	0e 94 46 01 	call	0x28c	; 0x28c <powerSTEP01_GPIO_Init>
	
	#ifdef reset
	releaseReset();
 752:	0e 94 50 01 	call	0x2a0	; 0x2a0 <releaseReset>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 756:	8f e9       	ldi	r24, 0x9F	; 159
 758:	9f e0       	ldi	r25, 0x0F	; 15
 75a:	01 97       	sbiw	r24, 0x01	; 1
 75c:	f1 f7       	brne	.-4      	; 0x75a <motorControl_Init+0x4c>
 75e:	00 c0       	rjmp	.+0      	; 0x760 <motorControl_Init+0x52>
 760:	00 00       	nop
	#endif
	_delay_ms(1);
	SPIXfer(0x00);
 762:	80 e0       	ldi	r24, 0x00	; 0
 764:	0e 94 a7 00 	call	0x14e	; 0x14e <SPIXfer>
	SPIXfer(0x00);
 768:	80 e0       	ldi	r24, 0x00	; 0
 76a:	0e 94 a7 00 	call	0x14e	; 0x14e <SPIXfer>
	SPIXfer(0x00);
 76e:	80 e0       	ldi	r24, 0x00	; 0
 770:	0e 94 a7 00 	call	0x14e	; 0x14e <SPIXfer>
	//setDeviceParam();
	
	for(i=1; i<4; i++)
 774:	c1 e0       	ldi	r28, 0x01	; 1
		setVoltageComp(i, VS_COMP_DISABLE);
		setSwitchMode(i, SW_USER);
		setOscMode(i, CONFIG_INT_16MHZ);
		setSTALL_TH(i, 0x00);
	
		setMaxSpeed(i, motorParam.maxSpeed);
 776:	0f 2e       	mov	r0, r31
 778:	f0 e0       	ldi	r31, 0x00	; 0
 77a:	ef 2e       	mov	r14, r31
 77c:	f1 e0       	ldi	r31, 0x01	; 1
 77e:	ff 2e       	mov	r15, r31
 780:	f0 2d       	mov	r31, r0
	SPIXfer(0x00);
	//setDeviceParam();
	
	for(i=1; i<4; i++)
	{
		config[i-1] = getParam(i, CONFIG);
 782:	6a e1       	ldi	r22, 0x1A	; 26
 784:	8c 2f       	mov	r24, r28
 786:	0e 94 a0 02 	call	0x540	; 0x540 <getParam>
		setSlewRate(i, SR_520V_us);
 78a:	66 ea       	ldi	r22, 0xA6	; 166
 78c:	8c 2f       	mov	r24, r28
 78e:	0e 94 44 03 	call	0x688	; 0x688 <setSlewRate>
	setParam(motor, 0, CONFIG, configVal);
}

void configStepMode(uint8_t motor, uint8_t stepMode)
{
	uint8_t stepModeConfig = (uint8_t)getParam(motor, STEP_MODE);
 792:	66 e1       	ldi	r22, 0x16	; 22
 794:	8c 2f       	mov	r24, r28
 796:	0e 94 a0 02 	call	0x540	; 0x540 <getParam>
	for(i=1; i<4; i++)
	{
		config[i-1] = getParam(i, CONFIG);
		setSlewRate(i, SR_520V_us);
		configStepMode(i, STEP_SEL_1_128);
		setOCD_TH(i, 8);
 79a:	68 e0       	ldi	r22, 0x08	; 8
 79c:	8c 2f       	mov	r24, r28
 79e:	0e 94 3c 02 	call	0x478	; 0x478 <setOCD_TH>
		setOCShutdown(i, OC_SD_ENABLE);
 7a2:	60 e8       	ldi	r22, 0x80	; 128
 7a4:	8c 2f       	mov	r24, r28
 7a6:	0e 94 2c 03 	call	0x658	; 0x658 <setOCShutdown>
		setPWMFreq(i, PWM_DIV_1, PWM_MUL_0_75);
 7aa:	40 e0       	ldi	r20, 0x00	; 0
 7ac:	60 e0       	ldi	r22, 0x00	; 0
 7ae:	8c 2f       	mov	r24, r28
 7b0:	0e 94 17 03 	call	0x62e	; 0x62e <setPWMFreq>
		setVoltageComp(i, VS_COMP_DISABLE);
 7b4:	60 e0       	ldi	r22, 0x00	; 0
 7b6:	70 e0       	ldi	r23, 0x00	; 0
 7b8:	8c 2f       	mov	r24, r28
 7ba:	0e 94 f5 02 	call	0x5ea	; 0x5ea <setVoltageComp>
		setSwitchMode(i, SW_USER);
 7be:	60 e1       	ldi	r22, 0x10	; 16
 7c0:	70 e0       	ldi	r23, 0x00	; 0
 7c2:	8c 2f       	mov	r24, r28
 7c4:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <setSwitchMode>
		setOscMode(i, CONFIG_INT_16MHZ);
 7c8:	60 e0       	ldi	r22, 0x00	; 0
 7ca:	70 e0       	ldi	r23, 0x00	; 0
 7cc:	8c 2f       	mov	r24, r28
 7ce:	0e 94 b1 02 	call	0x562	; 0x562 <setOscMode>
		setSTALL_TH(i, 0x00);
 7d2:	60 e0       	ldi	r22, 0x00	; 0
 7d4:	8c 2f       	mov	r24, r28
 7d6:	0e 94 49 02 	call	0x492	; 0x492 <setSTALL_TH>
	
		setMaxSpeed(i, motorParam.maxSpeed);
 7da:	f7 01       	movw	r30, r14
 7dc:	44 81       	ldd	r20, Z+4	; 0x04
 7de:	55 81       	ldd	r21, Z+5	; 0x05
 7e0:	66 81       	ldd	r22, Z+6	; 0x06
 7e2:	77 81       	ldd	r23, Z+7	; 0x07
 7e4:	8c 2f       	mov	r24, r28
 7e6:	0e 94 74 03 	call	0x6e8	; 0x6e8 <setMaxSpeed>
		setRunKval(i, motorParam.RunKval);
 7ea:	f7 01       	movw	r30, r14
 7ec:	60 81       	ld	r22, Z
 7ee:	8c 2f       	mov	r24, r28
 7f0:	0e 94 08 02 	call	0x410	; 0x410 <setRunKval>
		setHoldKval(i, motorParam.HoldKval);
 7f4:	f7 01       	movw	r30, r14
 7f6:	61 81       	ldd	r22, Z+1	; 0x01
 7f8:	8c 2f       	mov	r24, r28
 7fa:	0e 94 15 02 	call	0x42a	; 0x42a <setHoldKval>
		setAccKval(i, motorParam.AccKval);
 7fe:	f7 01       	movw	r30, r14
 800:	62 81       	ldd	r22, Z+2	; 0x02
 802:	8c 2f       	mov	r24, r28
 804:	0e 94 22 02 	call	0x444	; 0x444 <setAccKval>
		setDecKval(i, motorParam.DecKval);
 808:	f7 01       	movw	r30, r14
 80a:	63 81       	ldd	r22, Z+3	; 0x03
 80c:	8c 2f       	mov	r24, r28
 80e:	0e 94 2f 02 	call	0x45e	; 0x45e <setDecKval>
		setAcc(i, motorParam.Acc);
 812:	f7 01       	movw	r30, r14
 814:	40 85       	ldd	r20, Z+8	; 0x08
 816:	51 85       	ldd	r21, Z+9	; 0x09
 818:	62 85       	ldd	r22, Z+10	; 0x0a
 81a:	73 85       	ldd	r23, Z+11	; 0x0b
 81c:	8c 2f       	mov	r24, r28
 81e:	0e 94 56 02 	call	0x4ac	; 0x4ac <setAcc>
		setDec(i, motorParam.Dec);
 822:	f7 01       	movw	r30, r14
 824:	44 85       	ldd	r20, Z+12	; 0x0c
 826:	55 85       	ldd	r21, Z+13	; 0x0d
 828:	66 85       	ldd	r22, Z+14	; 0x0e
 82a:	77 85       	ldd	r23, Z+15	; 0x0f
 82c:	8c 2f       	mov	r24, r28
 82e:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <setDec>
	
		setParam(i, 0, ALARM_EN, 0xAF);
 832:	0f ea       	ldi	r16, 0xAF	; 175
 834:	10 e0       	ldi	r17, 0x00	; 0
 836:	20 e0       	ldi	r18, 0x00	; 0
 838:	30 e0       	ldi	r19, 0x00	; 0
 83a:	47 e1       	ldi	r20, 0x17	; 23
 83c:	60 e0       	ldi	r22, 0x00	; 0
 83e:	8c 2f       	mov	r24, r28
 840:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <setParam>
		getStatus(i);
 844:	8c 2f       	mov	r24, r28
 846:	0e 94 37 01 	call	0x26e	; 0x26e <getStatus>
	SPIXfer(0x00);
	SPIXfer(0x00);
	SPIXfer(0x00);
	//setDeviceParam();
	
	for(i=1; i<4; i++)
 84a:	cf 5f       	subi	r28, 0xFF	; 255
 84c:	c4 30       	cpi	r28, 0x04	; 4
 84e:	09 f0       	breq	.+2      	; 0x852 <motorControl_Init+0x144>
 850:	98 cf       	rjmp	.-208    	; 0x782 <motorControl_Init+0x74>
	
		setParam(i, 0, ALARM_EN, 0xAF);
		getStatus(i);
	}
	
}
 852:	cf 91       	pop	r28
 854:	1f 91       	pop	r17
 856:	0f 91       	pop	r16
 858:	ff 90       	pop	r15
 85a:	ef 90       	pop	r14
 85c:	08 95       	ret

0000085e <PWMinit>:

#include "PWM.h"

void PWMinit(void)
{
	DDRB |= (1<<PORTB7);
 85e:	27 9a       	sbi	0x04, 7	; 4
	TCCR0A |= (1<<COM0A1)|(1<<WGM00)|(1<<WGM01);
 860:	84 b5       	in	r24, 0x24	; 36
 862:	83 68       	ori	r24, 0x83	; 131
 864:	84 bd       	out	0x24, r24	; 36
	TCCR0B |= (1<<CS00);
 866:	85 b5       	in	r24, 0x25	; 37
 868:	81 60       	ori	r24, 0x01	; 1
 86a:	85 bd       	out	0x25, r24	; 37
 86c:	08 95       	ret

0000086e <SPI_Init>:
 86e:	84 b1       	in	r24, 0x04	; 4
 870:	86 60       	ori	r24, 0x06	; 6
 872:	84 b9       	out	0x04, r24	; 4
 874:	8c b5       	in	r24, 0x2c	; 44
 876:	8d 65       	ori	r24, 0x5D	; 93
 878:	8c bd       	out	0x2c, r24	; 44
 87a:	8d b5       	in	r24, 0x2d	; 45
 87c:	81 60       	ori	r24, 0x01	; 1
 87e:	8d bd       	out	0x2d, r24	; 45
 880:	08 95       	ret

00000882 <transfer>:
 882:	8e bd       	out	0x2e, r24	; 46
 884:	00 00       	nop
 886:	0d b4       	in	r0, 0x2d	; 45
 888:	07 fe       	sbrs	r0, 7
 88a:	fd cf       	rjmp	.-6      	; 0x886 <transfer+0x4>
 88c:	8e b5       	in	r24, 0x2e	; 46
 88e:	08 95       	ret

00000890 <main>:
#include "Library/PWM/PWM.h"
#include "Library/powerSTEP01/powerSTEP01.h"

int main(void)
{
	SPI_Init();
 890:	0e 94 37 04 	call	0x86e	; 0x86e <SPI_Init>
	motorControl_Init();
 894:	0e 94 87 03 	call	0x70e	; 0x70e <motorControl_Init>
	PWMinit();
 898:	0e 94 2f 04 	call	0x85e	; 0x85e <PWMinit>
	ADCInit();
 89c:	0e 94 85 00 	call	0x10a	; 0x10a <ADCInit>
 8a0:	ff cf       	rjmp	.-2      	; 0x8a0 <main+0x10>

000008a2 <ceil>:
 8a2:	0e 94 1f 05 	call	0xa3e	; 0xa3e <__fp_trunc>
 8a6:	90 f0       	brcs	.+36     	; 0x8cc <ceil+0x2a>
 8a8:	9f 37       	cpi	r25, 0x7F	; 127
 8aa:	48 f4       	brcc	.+18     	; 0x8be <ceil+0x1c>
 8ac:	91 11       	cpse	r25, r1
 8ae:	16 f4       	brtc	.+4      	; 0x8b4 <ceil+0x12>
 8b0:	0c 94 38 05 	jmp	0xa70	; 0xa70 <__fp_szero>
 8b4:	60 e0       	ldi	r22, 0x00	; 0
 8b6:	70 e0       	ldi	r23, 0x00	; 0
 8b8:	80 e8       	ldi	r24, 0x80	; 128
 8ba:	9f e3       	ldi	r25, 0x3F	; 63
 8bc:	08 95       	ret
 8be:	26 f0       	brts	.+8      	; 0x8c8 <ceil+0x26>
 8c0:	1b 16       	cp	r1, r27
 8c2:	61 1d       	adc	r22, r1
 8c4:	71 1d       	adc	r23, r1
 8c6:	81 1d       	adc	r24, r1
 8c8:	0c 94 d4 04 	jmp	0x9a8	; 0x9a8 <__fp_mintl>
 8cc:	0c 94 ef 04 	jmp	0x9de	; 0x9de <__fp_mpack>

000008d0 <__fixunssfsi>:
 8d0:	0e 94 05 05 	call	0xa0a	; 0xa0a <__fp_splitA>
 8d4:	88 f0       	brcs	.+34     	; 0x8f8 <__fixunssfsi+0x28>
 8d6:	9f 57       	subi	r25, 0x7F	; 127
 8d8:	98 f0       	brcs	.+38     	; 0x900 <__fixunssfsi+0x30>
 8da:	b9 2f       	mov	r27, r25
 8dc:	99 27       	eor	r25, r25
 8de:	b7 51       	subi	r27, 0x17	; 23
 8e0:	b0 f0       	brcs	.+44     	; 0x90e <__fixunssfsi+0x3e>
 8e2:	e1 f0       	breq	.+56     	; 0x91c <__fixunssfsi+0x4c>
 8e4:	66 0f       	add	r22, r22
 8e6:	77 1f       	adc	r23, r23
 8e8:	88 1f       	adc	r24, r24
 8ea:	99 1f       	adc	r25, r25
 8ec:	1a f0       	brmi	.+6      	; 0x8f4 <__fixunssfsi+0x24>
 8ee:	ba 95       	dec	r27
 8f0:	c9 f7       	brne	.-14     	; 0x8e4 <__fixunssfsi+0x14>
 8f2:	14 c0       	rjmp	.+40     	; 0x91c <__fixunssfsi+0x4c>
 8f4:	b1 30       	cpi	r27, 0x01	; 1
 8f6:	91 f0       	breq	.+36     	; 0x91c <__fixunssfsi+0x4c>
 8f8:	0e 94 37 05 	call	0xa6e	; 0xa6e <__fp_zero>
 8fc:	b1 e0       	ldi	r27, 0x01	; 1
 8fe:	08 95       	ret
 900:	0c 94 37 05 	jmp	0xa6e	; 0xa6e <__fp_zero>
 904:	67 2f       	mov	r22, r23
 906:	78 2f       	mov	r23, r24
 908:	88 27       	eor	r24, r24
 90a:	b8 5f       	subi	r27, 0xF8	; 248
 90c:	39 f0       	breq	.+14     	; 0x91c <__fixunssfsi+0x4c>
 90e:	b9 3f       	cpi	r27, 0xF9	; 249
 910:	cc f3       	brlt	.-14     	; 0x904 <__fixunssfsi+0x34>
 912:	86 95       	lsr	r24
 914:	77 95       	ror	r23
 916:	67 95       	ror	r22
 918:	b3 95       	inc	r27
 91a:	d9 f7       	brne	.-10     	; 0x912 <__fixunssfsi+0x42>
 91c:	3e f4       	brtc	.+14     	; 0x92c <__fixunssfsi+0x5c>
 91e:	90 95       	com	r25
 920:	80 95       	com	r24
 922:	70 95       	com	r23
 924:	61 95       	neg	r22
 926:	7f 4f       	sbci	r23, 0xFF	; 255
 928:	8f 4f       	sbci	r24, 0xFF	; 255
 92a:	9f 4f       	sbci	r25, 0xFF	; 255
 92c:	08 95       	ret

0000092e <__floatunsisf>:
 92e:	e8 94       	clt
 930:	09 c0       	rjmp	.+18     	; 0x944 <__floatsisf+0x12>

00000932 <__floatsisf>:
 932:	97 fb       	bst	r25, 7
 934:	3e f4       	brtc	.+14     	; 0x944 <__floatsisf+0x12>
 936:	90 95       	com	r25
 938:	80 95       	com	r24
 93a:	70 95       	com	r23
 93c:	61 95       	neg	r22
 93e:	7f 4f       	sbci	r23, 0xFF	; 255
 940:	8f 4f       	sbci	r24, 0xFF	; 255
 942:	9f 4f       	sbci	r25, 0xFF	; 255
 944:	99 23       	and	r25, r25
 946:	a9 f0       	breq	.+42     	; 0x972 <__floatsisf+0x40>
 948:	f9 2f       	mov	r31, r25
 94a:	96 e9       	ldi	r25, 0x96	; 150
 94c:	bb 27       	eor	r27, r27
 94e:	93 95       	inc	r25
 950:	f6 95       	lsr	r31
 952:	87 95       	ror	r24
 954:	77 95       	ror	r23
 956:	67 95       	ror	r22
 958:	b7 95       	ror	r27
 95a:	f1 11       	cpse	r31, r1
 95c:	f8 cf       	rjmp	.-16     	; 0x94e <__floatsisf+0x1c>
 95e:	fa f4       	brpl	.+62     	; 0x99e <__floatsisf+0x6c>
 960:	bb 0f       	add	r27, r27
 962:	11 f4       	brne	.+4      	; 0x968 <__floatsisf+0x36>
 964:	60 ff       	sbrs	r22, 0
 966:	1b c0       	rjmp	.+54     	; 0x99e <__floatsisf+0x6c>
 968:	6f 5f       	subi	r22, 0xFF	; 255
 96a:	7f 4f       	sbci	r23, 0xFF	; 255
 96c:	8f 4f       	sbci	r24, 0xFF	; 255
 96e:	9f 4f       	sbci	r25, 0xFF	; 255
 970:	16 c0       	rjmp	.+44     	; 0x99e <__floatsisf+0x6c>
 972:	88 23       	and	r24, r24
 974:	11 f0       	breq	.+4      	; 0x97a <__floatsisf+0x48>
 976:	96 e9       	ldi	r25, 0x96	; 150
 978:	11 c0       	rjmp	.+34     	; 0x99c <__floatsisf+0x6a>
 97a:	77 23       	and	r23, r23
 97c:	21 f0       	breq	.+8      	; 0x986 <__floatsisf+0x54>
 97e:	9e e8       	ldi	r25, 0x8E	; 142
 980:	87 2f       	mov	r24, r23
 982:	76 2f       	mov	r23, r22
 984:	05 c0       	rjmp	.+10     	; 0x990 <__floatsisf+0x5e>
 986:	66 23       	and	r22, r22
 988:	71 f0       	breq	.+28     	; 0x9a6 <__floatsisf+0x74>
 98a:	96 e8       	ldi	r25, 0x86	; 134
 98c:	86 2f       	mov	r24, r22
 98e:	70 e0       	ldi	r23, 0x00	; 0
 990:	60 e0       	ldi	r22, 0x00	; 0
 992:	2a f0       	brmi	.+10     	; 0x99e <__floatsisf+0x6c>
 994:	9a 95       	dec	r25
 996:	66 0f       	add	r22, r22
 998:	77 1f       	adc	r23, r23
 99a:	88 1f       	adc	r24, r24
 99c:	da f7       	brpl	.-10     	; 0x994 <__floatsisf+0x62>
 99e:	88 0f       	add	r24, r24
 9a0:	96 95       	lsr	r25
 9a2:	87 95       	ror	r24
 9a4:	97 f9       	bld	r25, 7
 9a6:	08 95       	ret

000009a8 <__fp_mintl>:
 9a8:	88 23       	and	r24, r24
 9aa:	71 f4       	brne	.+28     	; 0x9c8 <__fp_mintl+0x20>
 9ac:	77 23       	and	r23, r23
 9ae:	21 f0       	breq	.+8      	; 0x9b8 <__fp_mintl+0x10>
 9b0:	98 50       	subi	r25, 0x08	; 8
 9b2:	87 2b       	or	r24, r23
 9b4:	76 2f       	mov	r23, r22
 9b6:	07 c0       	rjmp	.+14     	; 0x9c6 <__fp_mintl+0x1e>
 9b8:	66 23       	and	r22, r22
 9ba:	11 f4       	brne	.+4      	; 0x9c0 <__fp_mintl+0x18>
 9bc:	99 27       	eor	r25, r25
 9be:	0d c0       	rjmp	.+26     	; 0x9da <__fp_mintl+0x32>
 9c0:	90 51       	subi	r25, 0x10	; 16
 9c2:	86 2b       	or	r24, r22
 9c4:	70 e0       	ldi	r23, 0x00	; 0
 9c6:	60 e0       	ldi	r22, 0x00	; 0
 9c8:	2a f0       	brmi	.+10     	; 0x9d4 <__fp_mintl+0x2c>
 9ca:	9a 95       	dec	r25
 9cc:	66 0f       	add	r22, r22
 9ce:	77 1f       	adc	r23, r23
 9d0:	88 1f       	adc	r24, r24
 9d2:	da f7       	brpl	.-10     	; 0x9ca <__fp_mintl+0x22>
 9d4:	88 0f       	add	r24, r24
 9d6:	96 95       	lsr	r25
 9d8:	87 95       	ror	r24
 9da:	97 f9       	bld	r25, 7
 9dc:	08 95       	ret

000009de <__fp_mpack>:
 9de:	9f 3f       	cpi	r25, 0xFF	; 255
 9e0:	31 f0       	breq	.+12     	; 0x9ee <__fp_mpack_finite+0xc>

000009e2 <__fp_mpack_finite>:
 9e2:	91 50       	subi	r25, 0x01	; 1
 9e4:	20 f4       	brcc	.+8      	; 0x9ee <__fp_mpack_finite+0xc>
 9e6:	87 95       	ror	r24
 9e8:	77 95       	ror	r23
 9ea:	67 95       	ror	r22
 9ec:	b7 95       	ror	r27
 9ee:	88 0f       	add	r24, r24
 9f0:	91 1d       	adc	r25, r1
 9f2:	96 95       	lsr	r25
 9f4:	87 95       	ror	r24
 9f6:	97 f9       	bld	r25, 7
 9f8:	08 95       	ret

000009fa <__fp_split3>:
 9fa:	57 fd       	sbrc	r21, 7
 9fc:	90 58       	subi	r25, 0x80	; 128
 9fe:	44 0f       	add	r20, r20
 a00:	55 1f       	adc	r21, r21
 a02:	59 f0       	breq	.+22     	; 0xa1a <__fp_splitA+0x10>
 a04:	5f 3f       	cpi	r21, 0xFF	; 255
 a06:	71 f0       	breq	.+28     	; 0xa24 <__fp_splitA+0x1a>
 a08:	47 95       	ror	r20

00000a0a <__fp_splitA>:
 a0a:	88 0f       	add	r24, r24
 a0c:	97 fb       	bst	r25, 7
 a0e:	99 1f       	adc	r25, r25
 a10:	61 f0       	breq	.+24     	; 0xa2a <__fp_splitA+0x20>
 a12:	9f 3f       	cpi	r25, 0xFF	; 255
 a14:	79 f0       	breq	.+30     	; 0xa34 <__fp_splitA+0x2a>
 a16:	87 95       	ror	r24
 a18:	08 95       	ret
 a1a:	12 16       	cp	r1, r18
 a1c:	13 06       	cpc	r1, r19
 a1e:	14 06       	cpc	r1, r20
 a20:	55 1f       	adc	r21, r21
 a22:	f2 cf       	rjmp	.-28     	; 0xa08 <__fp_split3+0xe>
 a24:	46 95       	lsr	r20
 a26:	f1 df       	rcall	.-30     	; 0xa0a <__fp_splitA>
 a28:	08 c0       	rjmp	.+16     	; 0xa3a <__fp_splitA+0x30>
 a2a:	16 16       	cp	r1, r22
 a2c:	17 06       	cpc	r1, r23
 a2e:	18 06       	cpc	r1, r24
 a30:	99 1f       	adc	r25, r25
 a32:	f1 cf       	rjmp	.-30     	; 0xa16 <__fp_splitA+0xc>
 a34:	86 95       	lsr	r24
 a36:	71 05       	cpc	r23, r1
 a38:	61 05       	cpc	r22, r1
 a3a:	08 94       	sec
 a3c:	08 95       	ret

00000a3e <__fp_trunc>:
 a3e:	0e 94 05 05 	call	0xa0a	; 0xa0a <__fp_splitA>
 a42:	a0 f0       	brcs	.+40     	; 0xa6c <__fp_trunc+0x2e>
 a44:	be e7       	ldi	r27, 0x7E	; 126
 a46:	b9 17       	cp	r27, r25
 a48:	88 f4       	brcc	.+34     	; 0xa6c <__fp_trunc+0x2e>
 a4a:	bb 27       	eor	r27, r27
 a4c:	9f 38       	cpi	r25, 0x8F	; 143
 a4e:	60 f4       	brcc	.+24     	; 0xa68 <__fp_trunc+0x2a>
 a50:	16 16       	cp	r1, r22
 a52:	b1 1d       	adc	r27, r1
 a54:	67 2f       	mov	r22, r23
 a56:	78 2f       	mov	r23, r24
 a58:	88 27       	eor	r24, r24
 a5a:	98 5f       	subi	r25, 0xF8	; 248
 a5c:	f7 cf       	rjmp	.-18     	; 0xa4c <__fp_trunc+0xe>
 a5e:	86 95       	lsr	r24
 a60:	77 95       	ror	r23
 a62:	67 95       	ror	r22
 a64:	b1 1d       	adc	r27, r1
 a66:	93 95       	inc	r25
 a68:	96 39       	cpi	r25, 0x96	; 150
 a6a:	c8 f3       	brcs	.-14     	; 0xa5e <__fp_trunc+0x20>
 a6c:	08 95       	ret

00000a6e <__fp_zero>:
 a6e:	e8 94       	clt

00000a70 <__fp_szero>:
 a70:	bb 27       	eor	r27, r27
 a72:	66 27       	eor	r22, r22
 a74:	77 27       	eor	r23, r23
 a76:	cb 01       	movw	r24, r22
 a78:	97 f9       	bld	r25, 7
 a7a:	08 95       	ret

00000a7c <__mulsf3>:
 a7c:	0e 94 51 05 	call	0xaa2	; 0xaa2 <__mulsf3x>
 a80:	0c 94 c2 05 	jmp	0xb84	; 0xb84 <__fp_round>
 a84:	0e 94 b4 05 	call	0xb68	; 0xb68 <__fp_pscA>
 a88:	38 f0       	brcs	.+14     	; 0xa98 <__mulsf3+0x1c>
 a8a:	0e 94 bb 05 	call	0xb76	; 0xb76 <__fp_pscB>
 a8e:	20 f0       	brcs	.+8      	; 0xa98 <__mulsf3+0x1c>
 a90:	95 23       	and	r25, r21
 a92:	11 f0       	breq	.+4      	; 0xa98 <__mulsf3+0x1c>
 a94:	0c 94 ab 05 	jmp	0xb56	; 0xb56 <__fp_inf>
 a98:	0c 94 b1 05 	jmp	0xb62	; 0xb62 <__fp_nan>
 a9c:	11 24       	eor	r1, r1
 a9e:	0c 94 38 05 	jmp	0xa70	; 0xa70 <__fp_szero>

00000aa2 <__mulsf3x>:
 aa2:	0e 94 fd 04 	call	0x9fa	; 0x9fa <__fp_split3>
 aa6:	70 f3       	brcs	.-36     	; 0xa84 <__mulsf3+0x8>

00000aa8 <__mulsf3_pse>:
 aa8:	95 9f       	mul	r25, r21
 aaa:	c1 f3       	breq	.-16     	; 0xa9c <__mulsf3+0x20>
 aac:	95 0f       	add	r25, r21
 aae:	50 e0       	ldi	r21, 0x00	; 0
 ab0:	55 1f       	adc	r21, r21
 ab2:	62 9f       	mul	r22, r18
 ab4:	f0 01       	movw	r30, r0
 ab6:	72 9f       	mul	r23, r18
 ab8:	bb 27       	eor	r27, r27
 aba:	f0 0d       	add	r31, r0
 abc:	b1 1d       	adc	r27, r1
 abe:	63 9f       	mul	r22, r19
 ac0:	aa 27       	eor	r26, r26
 ac2:	f0 0d       	add	r31, r0
 ac4:	b1 1d       	adc	r27, r1
 ac6:	aa 1f       	adc	r26, r26
 ac8:	64 9f       	mul	r22, r20
 aca:	66 27       	eor	r22, r22
 acc:	b0 0d       	add	r27, r0
 ace:	a1 1d       	adc	r26, r1
 ad0:	66 1f       	adc	r22, r22
 ad2:	82 9f       	mul	r24, r18
 ad4:	22 27       	eor	r18, r18
 ad6:	b0 0d       	add	r27, r0
 ad8:	a1 1d       	adc	r26, r1
 ada:	62 1f       	adc	r22, r18
 adc:	73 9f       	mul	r23, r19
 ade:	b0 0d       	add	r27, r0
 ae0:	a1 1d       	adc	r26, r1
 ae2:	62 1f       	adc	r22, r18
 ae4:	83 9f       	mul	r24, r19
 ae6:	a0 0d       	add	r26, r0
 ae8:	61 1d       	adc	r22, r1
 aea:	22 1f       	adc	r18, r18
 aec:	74 9f       	mul	r23, r20
 aee:	33 27       	eor	r19, r19
 af0:	a0 0d       	add	r26, r0
 af2:	61 1d       	adc	r22, r1
 af4:	23 1f       	adc	r18, r19
 af6:	84 9f       	mul	r24, r20
 af8:	60 0d       	add	r22, r0
 afa:	21 1d       	adc	r18, r1
 afc:	82 2f       	mov	r24, r18
 afe:	76 2f       	mov	r23, r22
 b00:	6a 2f       	mov	r22, r26
 b02:	11 24       	eor	r1, r1
 b04:	9f 57       	subi	r25, 0x7F	; 127
 b06:	50 40       	sbci	r21, 0x00	; 0
 b08:	9a f0       	brmi	.+38     	; 0xb30 <__stack+0x31>
 b0a:	f1 f0       	breq	.+60     	; 0xb48 <__stack+0x49>
 b0c:	88 23       	and	r24, r24
 b0e:	4a f0       	brmi	.+18     	; 0xb22 <__stack+0x23>
 b10:	ee 0f       	add	r30, r30
 b12:	ff 1f       	adc	r31, r31
 b14:	bb 1f       	adc	r27, r27
 b16:	66 1f       	adc	r22, r22
 b18:	77 1f       	adc	r23, r23
 b1a:	88 1f       	adc	r24, r24
 b1c:	91 50       	subi	r25, 0x01	; 1
 b1e:	50 40       	sbci	r21, 0x00	; 0
 b20:	a9 f7       	brne	.-22     	; 0xb0c <__stack+0xd>
 b22:	9e 3f       	cpi	r25, 0xFE	; 254
 b24:	51 05       	cpc	r21, r1
 b26:	80 f0       	brcs	.+32     	; 0xb48 <__stack+0x49>
 b28:	0c 94 ab 05 	jmp	0xb56	; 0xb56 <__fp_inf>
 b2c:	0c 94 38 05 	jmp	0xa70	; 0xa70 <__fp_szero>
 b30:	5f 3f       	cpi	r21, 0xFF	; 255
 b32:	e4 f3       	brlt	.-8      	; 0xb2c <__stack+0x2d>
 b34:	98 3e       	cpi	r25, 0xE8	; 232
 b36:	d4 f3       	brlt	.-12     	; 0xb2c <__stack+0x2d>
 b38:	86 95       	lsr	r24
 b3a:	77 95       	ror	r23
 b3c:	67 95       	ror	r22
 b3e:	b7 95       	ror	r27
 b40:	f7 95       	ror	r31
 b42:	e7 95       	ror	r30
 b44:	9f 5f       	subi	r25, 0xFF	; 255
 b46:	c1 f7       	brne	.-16     	; 0xb38 <__stack+0x39>
 b48:	fe 2b       	or	r31, r30
 b4a:	88 0f       	add	r24, r24
 b4c:	91 1d       	adc	r25, r1
 b4e:	96 95       	lsr	r25
 b50:	87 95       	ror	r24
 b52:	97 f9       	bld	r25, 7
 b54:	08 95       	ret

00000b56 <__fp_inf>:
 b56:	97 f9       	bld	r25, 7
 b58:	9f 67       	ori	r25, 0x7F	; 127
 b5a:	80 e8       	ldi	r24, 0x80	; 128
 b5c:	70 e0       	ldi	r23, 0x00	; 0
 b5e:	60 e0       	ldi	r22, 0x00	; 0
 b60:	08 95       	ret

00000b62 <__fp_nan>:
 b62:	9f ef       	ldi	r25, 0xFF	; 255
 b64:	80 ec       	ldi	r24, 0xC0	; 192
 b66:	08 95       	ret

00000b68 <__fp_pscA>:
 b68:	00 24       	eor	r0, r0
 b6a:	0a 94       	dec	r0
 b6c:	16 16       	cp	r1, r22
 b6e:	17 06       	cpc	r1, r23
 b70:	18 06       	cpc	r1, r24
 b72:	09 06       	cpc	r0, r25
 b74:	08 95       	ret

00000b76 <__fp_pscB>:
 b76:	00 24       	eor	r0, r0
 b78:	0a 94       	dec	r0
 b7a:	12 16       	cp	r1, r18
 b7c:	13 06       	cpc	r1, r19
 b7e:	14 06       	cpc	r1, r20
 b80:	05 06       	cpc	r0, r21
 b82:	08 95       	ret

00000b84 <__fp_round>:
 b84:	09 2e       	mov	r0, r25
 b86:	03 94       	inc	r0
 b88:	00 0c       	add	r0, r0
 b8a:	11 f4       	brne	.+4      	; 0xb90 <__fp_round+0xc>
 b8c:	88 23       	and	r24, r24
 b8e:	52 f0       	brmi	.+20     	; 0xba4 <__fp_round+0x20>
 b90:	bb 0f       	add	r27, r27
 b92:	40 f4       	brcc	.+16     	; 0xba4 <__fp_round+0x20>
 b94:	bf 2b       	or	r27, r31
 b96:	11 f4       	brne	.+4      	; 0xb9c <__fp_round+0x18>
 b98:	60 ff       	sbrs	r22, 0
 b9a:	04 c0       	rjmp	.+8      	; 0xba4 <__fp_round+0x20>
 b9c:	6f 5f       	subi	r22, 0xFF	; 255
 b9e:	7f 4f       	sbci	r23, 0xFF	; 255
 ba0:	8f 4f       	sbci	r24, 0xFF	; 255
 ba2:	9f 4f       	sbci	r25, 0xFF	; 255
 ba4:	08 95       	ret

00000ba6 <__tablejump2__>:
 ba6:	ee 0f       	add	r30, r30
 ba8:	ff 1f       	adc	r31, r31
 baa:	05 90       	lpm	r0, Z+
 bac:	f4 91       	lpm	r31, Z
 bae:	e0 2d       	mov	r30, r0
 bb0:	09 94       	ijmp

00000bb2 <_exit>:
 bb2:	f8 94       	cli

00000bb4 <__stop_program>:
 bb4:	ff cf       	rjmp	.-2      	; 0xbb4 <__stop_program>
